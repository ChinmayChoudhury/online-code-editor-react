{"version":3,"sources":["Components/FileExplorer.js","Components/CodeEditorHTML.js","Components/LiveResult.js","Components/CodeEditorCss.js","Components/CodeEditorJs.js","Hooks/useLocalCode.js","App.js","index.js"],"names":["FileExplorer","props","handleClick","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","console","log","status","responseText","send","state","isHtml","isCss","isJs","className","to","process","Component","CodeEditorHTML","handleCodeChange","editor","data","value","onCodeChange","code","onBeforeChange","this","options","lineWrapping","mode","lineNumbers","theme","LiveResult","htmlsrc","csssrc","jssrc","newProps","setTimeout","setState","height","width","marginHeight","marginWidth","frameBorder","sandbox","srcDoc","CodeEditor","useLocalCode","key","initValue","finalKey","useState","jsonCode","localStorage","getItem","JSON","parse","val","setVal","useEffect","setItem","stringify","App","htmlcode","setHTMLCode","csscode","setCSSCode","jscode","setJSCode","exact","path","codelanguage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbd580e0.chunk.js","sourcesContent":["import React, {useState, Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default class FileExplorer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        //not using this right now\r\n        this.state= {\r\n            isHtml: false,\r\n            isCss: false,\r\n            isJs: false\r\n        }\r\n    }\r\n    \r\n    // not using this function right now. Pastebin doesn't allow any more pastes???\r\n    handleClick= ()=>{\r\n        var url = \"https://pastebin.com/api/api_post.php\";\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", url);\r\n\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n        xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n            console.log(xhr.status);\r\n            console.log(xhr.responseText);\r\n        }};\r\n\r\n        var data = '{\"api_option\":\"paste\",\"api_user_key\":\"\",\"api_paste_private\":\"1\",\"api_paste_name\":\"chinmay.html\",\"api_paste_expire_date\":\"10M\",\"api_paste_format\":\"html\",\"api_dev_key\":\"rihuVYFGlhyrgBeH2zr7pbVkChI8_hu7\",\"api_paste_code\":\"hello\"}';\r\n\r\n        xhr.send(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fileexp\">\r\n                <p className=\"title\">FileExplorer </p><span>&nbsp;&nbsp;&nbsp;</span>\r\n                {/* Links to respective file, process.env.PUBLIC_URL gets the \r\n                    current url and adds further route ahead of it, \r\n                    helps with gh-pages routes.\r\n                */}\r\n                <Link to={process.env.PUBLIC_URL} >\r\n                    <button className=\"cust-btn html-btn\">HTML</button>\r\n                </Link><span>&nbsp;&nbsp;&nbsp;</span>\r\n                <Link to={process.env.PUBLIC_URL + '/css'} >\r\n                    <button className=\"cust-btn css-btn\">CSS</button>    \r\n                </Link><span>&nbsp;&nbsp;&nbsp;</span>\r\n                <Link to={process.env.PUBLIC_URL + '/javascript'} >\r\n                <button className=\"cust-btn js-btn\">JS</button>\r\n                </Link><span>&nbsp;&nbsp;&nbsp;</span>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n","import React, { useState, Component } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\n\r\nimport { Controlled as CodeEditorr} from 'react-codemirror2'\r\nexport default class CodeEditorHTML extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            code:'//Put your code here'\r\n        }\r\n    }\r\n    \r\n    handleCodeChange = (editor, data, value)=>{\r\n        // this.setState({code:value});\r\n        this.props.onCodeChange(value);\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor split_left\">\r\n                {/* hello */}\r\n                <p className='editor-title'>index.html (HTML)</p>\r\n                <CodeEditorr\r\n                    onBeforeChange={this.handleCodeChange}\r\n                    value = {this.props.value}\r\n                    options = {{\r\n                        lineWrapping : true,\r\n                        mode: \"xml\",\r\n                        lineNumbers : true,\r\n                        theme: 'material',\r\n                    }}\r\n                    className = \"code-editor\"\r\n                    \r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect, Component } from 'react'\r\n\r\nexport default class LiveResult extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            code:\"<html>\"+this.props.htmlsrc+\"<style>\"+this.props.csssrc+\"</style><script>\"+this.props.jssrc+\"</script></html>\"\r\n            \r\n        }\r\n\r\n    }\r\n    // sourceFile = this.props.htmlsrc;\r\n    // state = {\r\n    //     htmlsrc: \"<html>\"+this.props.htmlsrc+\"</html>\"\r\n    // }\r\n    \r\n    // On prop change update the source doc. Timeout is used to minimize very frequent reloads\r\n    componentWillReceiveProps(newProps){\r\n        const timeout = setTimeout(()=>{\r\n            this.setState({code:\"<html>\" +newProps.htmlsrc +\"<style>\"+newProps.csssrc+\"</style><script>\"+newProps.jssrc+\"</script></html>\"})\r\n\r\n        },300)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"outputbox split_right\">\r\n                <iframe\r\n                    height=\"100%\"\r\n                    width = \"100%\"\r\n                    marginHeight=\"0\"\r\n                    marginWidth = \"0\"\r\n                    frameBorder=\"0\"\r\n                    sandbox=\"allow-scripts\"\r\n                    srcDoc = {this.state.code}\r\n                />\r\n                    \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, Component } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\n\r\nimport { Controlled as CodeEditorr} from 'react-codemirror2'\r\nexport default class CodeEditor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            code:'//Put This is css editor your code here'\r\n        }\r\n    }\r\n    \r\n    handleCodeChange = (editor, data, value)=>{\r\n        // this.setState({code:value});\r\n        this.props.onCodeChange(value);\r\n    }\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor split_left\">\r\n                {/* hello */}\r\n                <p className=\"editor-title\">index.css (CSS)</p>\r\n                <CodeEditorr\r\n                    onBeforeChange={this.handleCodeChange}\r\n                    value = {this.props.value}\r\n                    options = {{\r\n                        lineWrapping : true,\r\n                        mode: \"css\",\r\n                        lineNumbers : true,\r\n                        theme: 'material',\r\n                    }}\r\n                    className = \"code-editor\"\r\n                    \r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, Component } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\n\r\nimport { Controlled as CodeEditorr} from 'react-codemirror2'\r\nexport default class CodeEditor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            code:'//This is js editor'\r\n        }\r\n    }\r\n    \r\n    handleCodeChange = (editor, data, value)=>{\r\n        // this.setState({code:value});\r\n        this.props.onCodeChange(value);\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"editor split_left\">\r\n                {/* hello */}\r\n                <p className=\"editor-title\">index.js (Javascript)</p>\r\n                <CodeEditorr\r\n                    onBeforeChange={this.handleCodeChange}\r\n                    value = {this.props.value}\r\n                    options = {{\r\n                        lineWrapping : true,\r\n                        mode: \"javascript\",\r\n                        lineNumbers : true,\r\n                        theme: 'material',\r\n                    }}\r\n                    className = \"code-editor\"\r\n                    \r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\n//stores code in local storage. HTML, css and javascript have different keys. \r\n// This helps to retain code when the page refreshes.\r\nconst PREFIXKEY = 'online-code-editor-chinmay-'\r\nexport default function useLocalCode(key, initValue) {\r\n    const finalKey = PREFIXKEY + key\r\n\r\n    const [val, setVal] = useState(()=>{\r\n        const jsonCode = localStorage.getItem(finalKey)\r\n\r\n        if (jsonCode!= null) return JSON.parse(jsonCode)\r\n        if (typeof initValue === 'function'){\r\n            return initValue()\r\n        }else{\r\n            return initValue\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(finalKey, JSON.stringify(val))\r\n    }, [finalKey, val])\r\n    return (\r\n       [val, setVal]\r\n    )\r\n}\r\n","import './App.css';\r\nimport React, { useState, Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport FileExplorer from './Components/FileExplorer';\r\nimport CodeEditorHTML from './Components/CodeEditorHTML';\r\nimport LiveResults from './Components/LiveResult';\r\nimport CodeEditorCss from './Components/CodeEditorCss';\r\nimport CodeEditorJs from './Components/CodeEditorJs';\r\nimport useLocalCode from './Hooks/useLocalCode';\r\nexport default function App() {\r\n  \r\n\r\n  const [ htmlcode, setHTMLCode] = useLocalCode('htmlcode','')\r\n  const [csscode, setCSSCode] = useLocalCode('csscode', '')\r\n  const [ jscode , setJSCode] = useLocalCode('jscode', '')\r\n      \r\n    return (\r\n\r\n      // uses browser router to navigate through the 3 files\r\n        <BrowserRouter>\r\n      <div className=\"App\">\r\n        <FileExplorer/>\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL}>\r\n              <CodeEditorHTML\r\n                codelanguage = \"\"\r\n                value = {htmlcode}\r\n                onCodeChange = {setHTMLCode}\r\n              />\r\n            </Route>\r\n            <Route exact path={process.env.PUBLIC_URL + '/css'}>\r\n              <CodeEditorCss\r\n                codelanguage = \"\"\r\n                value = {csscode}\r\n                onCodeChange = {setCSSCode}\r\n              />\r\n            </Route>\r\n            <Route exact path={process.env.PUBLIC_URL + '/javascript'}>\r\n              <CodeEditorJs\r\n                codelanguage = \"\"\r\n                value = {jscode}\r\n                onCodeChange = {setJSCode}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        <div className=\"split_bar\"></div>\r\n        <LiveResults htmlsrc = {htmlcode} csssrc = {csscode} \r\n          jssrc = {jscode}\r\n        />\r\n        </div>\r\n      </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Styles/pagestyle.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* HashRouter takes care of routes on gh pages */}\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}